2.14.20 - weekly friday night update

[PERS]

It's always difficult to punch the clock when your mind is chugging along about half dozen projects, but I need to know when to say stop and document. It's been a nice change to have so much time since I quit my part time job. I thought this little retail/manual labor 10-15 hr a week job would be perfect to help pay for food and gas while I took time of to study and rest after my PhD. It was a nice experience of the grass is greener, came in and did the job they asked of me as well as I thought it should be done and wowed my managers in the process (I think I wowed them). As the holidays approached they gave me more and more hours, pushing 30 a week for about a month. I didn't poo-poo that too much since this was a time when I was happy to get some extra money and I told myself the times would return to that minimal level when the holidays ended. But I seemed to prove my ability and they kept me at about 20+, and at that point I knew I needed to just quit. 

Another valuable lesson I learned was the 'flux' of work effort that can occur in a job. When I started working there, it was me, one other guy also newly hired, and a manager with 11 years experience, recieving a truck at 4am, unloading it, breaking down the pallets of stock, and restocking the store. The other new guy quit without notice within a month. The manager put in her two weeks soon after I joined and so was gone around the same time. They then got a newly hired asst. manger and their custodial worker to replace them. I as an individual had to work harder so that the same 'morning truck reciving' crew accomplished the same tasks. I thought, eventually they'll hire a new helper and manger with more ability and it will go back to normal. 

The custodial worker recognized I was a dilligent worker. His breaks got longer and more frequent, leaving earlier and coming in later. Part of me didn't blame him, he signed up to clean and this was hard physical work. As he slowed I hastened. A new manger was hired but he was inexperienced, his first time in a position like this. There were certain tasks that the manger needs to do before the store opens outside of recieving the truck and helping stock the shelves. His inexperience meant he was much slower at that opening the store work. I had to work harder and I did. The manager commented on how slow the custodial worker was often, and I agreed with him saying I could do what he did much faster. 

Eventually, the custodial worker quit, no call no showed one morning and left me by myself to do the entire job myself with one person who had to work on other things. I thought, this is terrible, and it was the new normal. Despite the continued exposure to the job, the new manager never became much quicker at the paperwork tasks he had to excuse himself to work on, nor worked even at the level of speed that the custodial worker did and I ran myself ragged twice a week to accomplish as much as I could, which wasn't good enough for the main managers of the store. So they gave me more hours to work the rest, expecting the same rate of work effort I gave on those days with trucks, because they knew I was capable of it. New people were hired and I was promised they would help with the truck, giving me some hope that these haggerd mornings would end, but a month after the hires, only 1 came in once to help at 4am and otherwise I was left to work it myself. 

The lesson I learned is that everyone else saw that I was willing and able to pick up the slack of others and what that informed them was that they didn't need to pull as hard. The custodial saw I worked hard, so he didn't have to. The manger saw I worked hard so he could spend more time on the paperwork. The main mangers saw I worked hard and therefore put no effort into easing my workload. This went on until I said enough was enough and quit. 

Is this a lesson for a worker to not work as hard as they can? I don't know, I personally would get bugged if things were left half finished when my shift was up. It bothered me and so I would work harder to make sure they got done. If I didn't, then I would be annoyed. In the same vein, if I chose to take more breaks or work at a slower rate, I think I would get bored. Working hard has always been a remedy for a slow moving clock in my experience. 

So really this is a lesson for a manager. They had a hard working employee who was *happy* to wake up at 3:30am to move thousands of pounds of stock for them and they used up his goodwill and he quit. The manager needs to recognize that in daily work life, see where people are pushing and making sure they don't push for too long. Recognize why they are putting in that extra effort and try to balance it better. Whether that means reprimanding slow workers or slow managers or telling the worker 'hey the work isn't going anywhere don't burn yourself out' finding new employees to help them or even coming in yourself to help a little. 

I did my grass is greener experience of working a bottom rung part time job but I'm ready to get into a position that is more in line with my skillset. 

I put in one job appilcation. I am applying for these data scientist jobs that I think I would be a good fit for, but I do not have those personal portfolio projects that I assume hirers are looking for. These projects are my solution to this. I am a bit gun shy to apply to positions without having that critical component complete. This week I worked on 3 projects. 

[GOOGMUS] 

I started work on my personal music playlist project. Google play music has been my streaming service for about 8 years now. I orginally signed up for it becuase it allowed mee to upload my personal music library to there service and have access to it from anywhere, any device. I was/am an avid supporter of DIY local music, physical media, bandcamp, etc. so it was great to be able to import my library and be able to access it. Since then, I've used google play music to compile hundreds of playlists that I've made for personal use, for friends, and for my radio show. Google music also allowed a pretty painless 'add to library' button on their service by which if you liked an album you could put it in your own library rubbing shoulders with the music you did own. This is a nice way to centralize all music you enjoy but if you were ever to cancel your subscription, those tracks would not be kept. 

Now in the present day most streaming sites music libraries are impressively exhaustive and my own time to find bands has diminished meaning that the offered libraries are about 99% capable of getting me the music I want and other streaming services have caught up with googles ability to upload your personal music for that last 1%. Spotify has for a long time offered a very cheap $5/month deal for hulu and itself that was always enticing for me but I could never leave google because it retained all my playlists and there was no feature that allowed you to export them.

So, one of the projects I knew I wanted to do was to extract this info. And while brainstorming I decided, I might as well build a SQL database for do some analysis on my music taste, see what I could find out about my listening habits.

This week I started with an attempt to webscrape the info from google play music account. This would be my first attempt at web scraping. I installed beautiful soup and selentium but was quickly stopped by googles ability to read my activity as bot behavior. This lead to me being unable to get into my account to extract the info and after a few hours of trouble shooting solutions I deemed it no longer worth my time to try and go that route.

After some googling I came across an unofficial API written by Simon Weber (https://github.com/simon-weber/gmusicapi) that allowed me to access my google library via python! Figuring out the methods and output I wrote a small python script that pulled all the info I was interested in and placed it in a text file. Then I converted that txt file to a .CSV. If theres one other thing I'd like to do with this script, it would be to have the script directly putput a csv, but I reached for my more often used output of .write/.read before considering the csv library. 

From hear I can build my SQL database and have some fun with my info, listening count, genre, process the content of songs/album/band names.


[HOUWHI]

The Houston Astros were caught cheating in the 2017 MLB season. If the details interest you can find them all over the internet but here are some poingnant particulars. If a batter is guessing that the next pitch hes going to see is an offspeed, 80 mph pitch hes going to prime himself with the timing to hit a ball thats coming from the pitcher at that speed. If the pitcher ends up throwing a 100 mph dart the batter can end up just staring as the ball flys by and concede welp, fooled me! Plenty of at bats you'll see this, a strike followed by a smile and nod from the batter as if to say alright, you got me, I guessed wrong! Or the opposite case when the batter assumes a fast ball is coming and ends up swinging before the ball even reaches the plate. Or a third case when the batter swings at a ball they expect to connect with but the pitcher throws a breaking ball that ends up in the opposite batters box, a foot from the strike zone! Sometimes these batter guesses are called 'sitting' a batter just watches a pitch wiz by? he was sitting fastball, meaning he got himself and all his muscle memory primed to act and increase his chances of a hit if he guessed right and gets a fastball pitched. 

Now, what if the batter **knew** what pitch was coming? **Knew** how to sit for every pitch? Thats the 2017 Astros. A live feed of the catcher, relaying signals to the pitcher to decide what pitch to throw, was sent into the Astros dugout where players would bang on a trashcan to let the batter now what pitch was coming. You can see how this would increase a batters chances to make contact with the ball, right? There are other variables of course, knowing what pitch was coming doesn't gurantee a hit for every batter but it reduces the number of variables the batter has to consider to get a ball in play, which can only help. 

One industrious baseball fan (an astros fan, no less) cataloged all the heard bangs over the course of the 2017 season and gave the data up for all to see here (). This data shows who was recieving bangs and the 'bang density' how many bangs a game where showing. The one issue is that a bang or two bangs signaled certain pitches, but 'no bang' or the absence of a bang signified a third type of pitch. That means that a certain sample of 'cheats' are not shown in this data, since they can't be recognized. 

The bangs, according to both the MLB and the fan, taper off in the 2018 season. But the question I and many others have asked is what incentive do the Astros have to stop cheating after their actions lead to them winning a world series, with no one catching on? When the post season crowds got to loud for the Astros to hear the banging, they devised a new system where there bullpen catched would be fed which pitches were coming and put his hands up on the railing of the outfield accordingly. The Astros are capable of making other systems to continue cheating. So when the banging stopped were they simpling changing their methods?

2 other schemes have been proposed. 

The first was whistling. The Yankees and Nationals orginizations have both challenged that the Astros switched to whistling and that is how they signaled the pitches in the 2019 season. If someone can catalog the bangs then I can catalog the whistles. Their are 2 distinct whistles I and others heard often when watching games against the astros. A 'charge' whistle and a 'bird pew' whistle.

Surprisingly MLB provides every game of baseball played from 2009 onwards on Youtube. By typing in the releevant info with a certain syntax you can watch a baseball broadcast in its entirety. If you're interested what that format is check this reddit post(). Sadly, they haven't uploaded any 2019 games, which is the season where the Yankees and Nationals openly accused the team of using this whistle scheme. But if the whistle scheme had its origin in the previous 162 games, I shoulw be able to find it.

The plan is to extract audio from these broadcasts, find examples of the two whistles, identify there spectral properties and scan the remaining audio for other instances, timestamping there moment in the game. From there I would check visually the situation and use a site like baseball savant to pull up pitch information and outcome and catalog the results. 

Currently I've gotten as far as extracting the audio. The next will be to find a way to fingerprint the whistles.

[DISS]

I had some projects I wrote in C for work in my dissertation. To improve my python and update those programs, I decided to rewrite them. The first one I rewrote was a program that takes two vectors that represent two legs of a tetrahedra and finds the remaining two legs. A more in-depth description can be found in /python/dissertation/tetra completer. Notably, I improved the code by implementing numpy and the other correction is to introduce a 3-d visulizer, if possible.

